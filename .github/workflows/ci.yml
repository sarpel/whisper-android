name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2
  GRADLE_USER_HOME: ${{ github.workspace }}/.gradle

jobs:
  # ==============================================================================
  # Code Quality and Validation
  # ==============================================================================
  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
    
    - name: Cache Gradle Dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
          .gradle
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    - name: Make Gradle Wrapper Executable
      run: chmod +x ./gradlew
    
    - name: Run Lint Checks
      run: ./gradlew lintDebug
    
    - name: Upload Lint Results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: lint-results
        path: app/build/reports/lint-results-debug.html
    
    - name: Run Detekt
      run: ./gradlew detekt
      continue-on-error: true
    
    - name: Upload Detekt Results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: detekt-results
        path: app/build/reports/detekt/

  # ==============================================================================
  # Unit Tests
  # ==============================================================================
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    strategy:
      matrix:
        api-level: [24, 29, 33]
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
    
    - name: Setup JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
    
    - name: Cache Gradle Dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
          .gradle
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    - name: Make Gradle Wrapper Executable
      run: chmod +x ./gradlew
    
    - name: Run Unit Tests
      run: ./gradlew testDebugUnitTest
    
    - name: Generate Test Coverage Report
      run: ./gradlew jacocoTestReport
    
    - name: Upload Test Results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: unit-test-results-api-${{ matrix.api-level }}
        path: |
          app/build/reports/tests/
          app/build/reports/jacoco/
    
    - name: Upload Coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: app/build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml
        flags: unittests
        name: codecov-umbrella

  # ==============================================================================
  # Instrumentation Tests
  # ==============================================================================
  instrumentation-tests:
    name: Instrumentation Tests
    runs-on: macos-latest
    timeout-minutes: 45
    
    strategy:
      matrix:
        api-level: [24, 29, 33]
        target: [default, google_apis]
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
    
    - name: Setup JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
    
    - name: Cache Gradle Dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
          .gradle
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    - name: Cache AVD
      uses: actions/cache@v3
      id: avd-cache
      with:
        path: |
          ~/.android/avd/*
          ~/.android/adb*
        key: avd-${{ matrix.api-level }}-${{ matrix.target }}
    
    - name: Create AVD and Generate Snapshot
      if: steps.avd-cache.outputs.cache-hit != 'true'
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: ${{ matrix.api-level }}
        target: ${{ matrix.target }}
        arch: x86_64
        force-avd-creation: false
        emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
        disable-animations: false
        script: echo "Generated AVD snapshot for caching."
    
    - name: Make Gradle Wrapper Executable
      run: chmod +x ./gradlew
    
    - name: Run Instrumentation Tests
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: ${{ matrix.api-level }}
        target: ${{ matrix.target }}
        arch: x86_64
        force-avd-creation: false
        emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
        disable-animations: true
        script: ./gradlew connectedDebugAndroidTest
    
    - name: Upload Instrumentation Test Results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: instrumentation-test-results-api-${{ matrix.api-level }}-${{ matrix.target }}
        path: app/build/reports/androidTests/

  # ==============================================================================
  # Security Scan
  # ==============================================================================
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
    
    - name: Run Trivy Vulnerability Scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: Upload Trivy Scan Results
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'
    
    - name: Run CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        languages: java

  # ==============================================================================
  # Build Validation
  # ==============================================================================
  build-validation:
    name: Build Validation
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: [code-quality, unit-tests]
    
    strategy:
      matrix:
        build-type: [debug, release]
        flavor: [free, pro]
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
    
    - name: Setup JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
    
    - name: Cache Gradle Dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
          .gradle
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    - name: Make Gradle Wrapper Executable
      run: chmod +x ./gradlew
    
    - name: Build APK
      run: ./gradlew assemble${{ matrix.flavor }}${{ matrix.build-type }}
      env:
        KEYSTORE_FILE: ${{ github.workspace }}/debug.keystore
        KEYSTORE_PASSWORD: android
        KEY_ALIAS: androiddebugkey
        KEY_PASSWORD: android
    
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: apk-${{ matrix.flavor }}-${{ matrix.build-type }}
        path: app/build/outputs/apk/${{ matrix.flavor }}/${{ matrix.build-type }}/*.apk
